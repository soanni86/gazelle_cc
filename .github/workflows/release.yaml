# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`.
name: Release

on:
  push:
    tags:
      - 'v*.*.*'

  # In case of problems, enable manual dispatch from the GitHub UI.
  workflow_dispatch:
    inputs:
      tag_name:
        required: true
        type: string

# Uses the `release_ruleset` workflow to generate provenance attestation files
# referenced by the `publish-to-bcr` workflow.
#
# Based on .github/workflows/release.yml from bazel-contrib/rules_scala v7.0.0.
# See .bcr/README.md.

permissions:
  attestations: write # Needed to attest provenance
  contents: write # Needed to create release
  id-token: write # Needed to attest provenance

jobs:
  release:
    uses: bazel-contrib/.github/.github/workflows/release_ruleset.yaml@v7.2.2
    with:
      bazel_test_command: "bazel test //..."
      prerelease: false
      release_files: gazelle_cc-*.tar.gz
      tag_name: ${{ inputs.tag_name || github.ref_name }}

  check-tag:
    runs-on: ubuntu-latest
    outputs:
      isStableVersion: ${{ steps.check.outputs.isStableVersion }}
    steps:
      - name: Check if tag is a stable version
        id: check
        run: |
          isStableVersion=false
          TAG_NAME="${{ inputs.tag_name || github.ref_name }}"
          if [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            isStableVersion=true
          fi
          echo "isStableVersion=$isStableVersion" >> "$GITHUB_OUTPUT"
      
  publish-to-bcr:
    needs: [release, check-tag]
    if: needs.check-tag.outputs.isStableVersion == 'true'
    uses: ./.github/workflows/publish-to-bcr.yaml
    with:
      tag_name: ${{ inputs.tag_name || github.ref_name }}
    secrets:
      ENGFLOW_AUTOMATION_PUBLIC_PAT: ${{ secrets.ENGFLOW_AUTOMATION_PUBLIC_PAT }}
